{"version":3,"sources":["logo.svg","Const.js","StaffInfoDialog.js","staffList.js","jobList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Const","jobs","edus","TextArea","Input","StaffInfoDialog","state","ModalText","visible","confirmLoading","staff","mJobs","showModal","_this","setState","handleOk","setTimeout","handleCancel","console","log","this","getData","newProps","key","id","name","job","company","birth_year","education","hometown","phone","email","qq","wechat","_this$state","react_default","a","createElement","es_modal","title","style","top","width","onOk","onCancel","afterClose","props","okText","cancelText","es_form","layout","onSubmit","handleSubmit","Item","Object","assign","label","styles","formItemLayout","es_select","defaultValue","onChange","value","map","index","Option","input","placeholder","prefix","icon","type","color","autosize","minRows","maxRows","extra","upload","action","listType","es_button","wrapperCol","span","offset","React","Component","labelCol","StaffList","columns","dataIndex","render","align","fixed","onClick","showInfoDialog","mAllData","mData","smallSize","handleWindowWidth","document","documentElement","clientWidth","tableWidth","refs","table","i","jobIndex","Math","floor","random","length","edu","experience","logs","push","window","addEventListener","removeEventListener","items","filter","item","_this2","marginRight","handleFilterChange","searchItem","prefixIcon","htmlType","float","ref","marginTop","dataSource","scroll","x","StaffInfoDialog_StaffInfoDialog","JobList","showConfirm","marginBottom","pagination","that","modal","Modal","confirm","content","Promise","resolve","reject","rdm","then","re","destroy","message","info","removeData","catch","error","Content","Layout","Footer","Sider","App","collapsed","currentPage","onCollapse","pageView","jobList","staffList","minHeight","collapsible","className","height","backgroundColor","textAlign","src","logo","alt","menu","theme","defaultSelectedKeys","mode","onSelect","_ref","margin","padding","background","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.809cb1ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default class Const {\n    static jobs = ['所有职位', 'Android', 'IOS', 'Web前端', 'Java后台', '算法', '数据库'];\n    static edus = ['博士', '硕士', '本科', '专科', '其他']\n}","import React from 'react';\nimport { Modal, Form, Icon, Input, Select, Button, Upload } from 'antd';\nimport Const from './Const'\nconst { TextArea } = Input;\n\nexport default class StaffInfoDialog extends React.Component {\n  state = {\n    ModalText: '信息',\n    visible: false,\n    confirmLoading: false,\n    staff: null,\n    mJobs: [],\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillReceiveProps(newProps) {\n    //console.log(newProps);\n    if (newProps.visible) {\n      this.showModal()\n    }\n  }\n\n\n  getData() {\n    let i = 1;\n    let staff = {\n      key: '' + i,\n      id: i,\n      name: '姓名-' + i,\n      job: 3,\n      company: '公司-' + i,\n      birth_year: 30,\n      education: 3,\n      hometown: '深圳',\n      phone: '13567893456',\n      email: 'test@163.com',\n      qq: '67893456',\n      wechat: '1356789',\n    }\n\n    this.setState({staff:staff});\n  }\n\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      ModalText: '正在保存中……',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  }\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  }\n\n\n  render() {\n    const { visible, confirmLoading } = this.state;\n\n    return (\n      <Modal\n        title=\"信息编辑\"\n        visible={visible}\n        style={{ top: 20 }}\n        width={800}\n        onOk={this.handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={this.handleCancel}\n        afterClose={this.props.afterClose}\n        okText=\"保存\"\n        cancelText=\"取消\"\n      >\n        <div>\n          <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\n\n            <Form.Item label=\"职位\" {...styles.formItemLayout}>\n              <Select defaultValue={0} style={{ width: 140 }} onChange={value => console.log(value)}>\n                {Const.jobs.map((job, index) => <Select.Option value={index} key={index+''}>{job}</Select.Option>)}\n              </Select>\n            </Form.Item>\n\n            <Form.Item label=\"公司\" {...styles.formItemLayout}>\n              <Input placeholder=\"公司\" />\n            </Form.Item>\n\n            <Form.Item label=\"学历\" {...styles.formItemLayout}>\n              <Select defaultValue={0} style={{ width: 140 }} onChange={value => console.log(value)}>\n                {Const.edus.map((job, index) => <Select.Option value={index} key={index+''}>{job}</Select.Option>)}\n              </Select>\n            </Form.Item>\n\n            <Form.Item label=\"出生年\" {...styles.formItemLayout}>\n              <Input placeholder=\"年份\" />\n            </Form.Item>\n\n            <Form.Item label=\"籍贯\" {...styles.formItemLayout}>\n              <Input placeholder=\"省市\" />\n            </Form.Item>\n\n            <Form.Item label=\"手机\" {...styles.formItemLayout}>\n              <Input prefix={<Icon type=\"mobile\" style={{ color: 'rgba(0,0,0,.25)' }} />} />\n            </Form.Item>\n            <Form.Item label=\"邮箱\" {...styles.formItemLayout}>\n              <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} />\n            </Form.Item>\n            <Form.Item label=\"QQ\" {...styles.formItemLayout}>\n              <Input prefix={<Icon type=\"qq\" style={{ color: 'rgba(0,0,0,.25)' }} />} />\n            </Form.Item>\n            <Form.Item label=\"微信\" {...styles.formItemLayout}>\n              <Input prefix={<Icon type=\"wechat\" style={{ color: 'rgba(0,0,0,.25)' }} />} />\n            </Form.Item>\n\n            <Form.Item label=\"工作经历\"  {...styles.formItemLayout}>\n              <TextArea placeholder=\"\" autosize={{ minRows: 4, maxRows: 8 }} />\n            </Form.Item>\n\n            <Form.Item label=\"联系记录\"  {...styles.formItemLayout}>\n              <TextArea placeholder=\"\" autosize={{ minRows: 4, maxRows: 8 }} />\n            </Form.Item>\n\n\n            <Form.Item label=\"附件\" {...styles.formItemLayout} extra='已上传文件：'>\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                <Button>\n                  <Icon type=\"upload\" /> 选择附件上传\n              </Button>\n              </Upload>\n            </Form.Item>\n\n            <Form.Item wrapperCol={{span: 16, offset: 4}}>\n              <Button\n                  type=\"danger\"\n                  icon=\"delete\"\n                  style={{ width: 500}}>删除</Button>\n            </Form.Item>\n            \n          </Form>\n\n          \n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst styles = {\n  formItemLayout: {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n  },\n\n};\n","import React from 'react';\nimport Const from './Const'\n\n\nimport {\n    Table, Icon, Input, Select, Button, Form\n} from 'antd';\n\nimport StaffInfoDialog from './StaffInfoDialog';\n\nclass StaffList extends React.Component {\n    columns = [{\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n    }, {\n        title: '职位',\n        dataIndex: 'job',\n        key: 'job',\n        render: (index) => (<span>{Const.jobs[index]}</span>)\n    }, {\n        title: '公司',\n        dataIndex: 'company',\n        key: 'company',\n    }, {\n        title: '学历',\n        dataIndex: 'education',\n        key: 'education',\n        render: (index) => (<span>{Const.edus[index]}</span>)\n    }, {\n        title: '生年',\n        dataIndex: 'birth_year',\n        key: 'birth_year',\n        align: 'center'\n    }, {\n        title: '籍贯',\n        dataIndex: 'hometown',\n        key: 'hometown',\n    }, {\n        title: '电话',\n        dataIndex: 'phone',\n        key: 'phone',\n    }, {\n        title: 'email',\n        dataIndex: 'email',\n        key: 'email',\n    }, {\n        title: 'QQ',\n        dataIndex: 'qq',\n        key: 'qq',\n    }, {\n        title: '微信',\n        dataIndex: 'wechat',\n        key: 'wechat',\n    }/* , {\n        title: '工作经历',\n        dataIndex: 'experience',\n        key: 'experience',\n    }, {\n        title: '联系记录',\n        dataIndex: 'logs',\n        key: 'logs',\n    } */, {\n        title: '编辑',\n        dataIndex: 'id',\n        key: 'action',\n        fixed: 'right',\n        render: (id) => (\n            <span>\n                <Icon type=\"edit\" onClick={id => this.showInfoDialog(id)} />\n            </span>\n        ),\n    }];\n\n    mAllData = [];\n\n    state = {\n        mJobs: [],\n        mData: [],\n        showInfoDialog: false,\n        smallSize: false,\n    };\n\n    getData() {\n        for (let i = 1; i <= 100; i++) {\n\n            let jobIndex = Math.floor((Math.random() * (Const.jobs.length - 1)) + 1);\n            //let jobIndex = i % this.state.mJobs.length;\n            let edu = Math.floor((Math.random() * (Const.edus.length - 1)));\n            let staff = {\n                key: '' + i,\n                id: i,\n                name: '姓名-' + i,\n                job: jobIndex,\n                company: '公司-' + i,\n                birth_year: 85 + edu * 2,\n                education: edu,\n                hometown: '深圳',\n                phone: '13567893456',\n                email: 'test@163.com',\n                qq: '67893456',\n                wechat: '1356789',\n                experience: '1 2 3',\n                logs: '12341234',\n            }\n\n            this.mAllData.push(staff);\n        }\n\n        this.setState({\n            mJobs: Const.jobs,\n            mData: this.mAllData,\n        });\n    }\n\n    componentDidMount() {\n        this.getData();\n        window.addEventListener('resize', this.handleWindowWidth);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowWidth);\n    }\n\n    handleWindowWidth = () => {\n        // 窗口太小时，菜单列换行\n        let width = document.documentElement.clientWidth;\n        console.log(\"window width: \" + width);\n\n        let tableWidth = this.refs.table.clientWidth;\n        console.log(\"table width: \" + tableWidth);\n\n        this.setState({\n            smallSize: width < 1200,\n        });\n    }\n\n    showInfoDialog(id) {\n        this.setState({\n            showInfoDialog: true,\n        });\n    }\n\n    handleFilterChange(value) {\n        let items = this.mAllData.filter(item => item.job === value);\n        this.setState({\n            mData: items,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n\n                    {/* <Input.Search\n                        placeholder=\"搜索\"\n                        onSearch={value => console.log(value)}\n                        style={{ width: 200, marginLeft: 10 }}\n                    /> */}\n\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                        <Form.Item style={{ marginRight: 20 }}>\n                            <Select defaultValue={0} style={{ width: 160 }} onChange={value => this.handleFilterChange(value)}>\n                                {this.state.mJobs.map((job, index) => <Select.Option value={index} key={index+''}>{job}</Select.Option>)}\n                            </Select>\n                        </Form.Item>\n\n                        {/* <Form.Item style={{ width: 160, marginRight: 4}}>\n                            <Input placeholder=\"搜索内容\" />\n                        </Form.Item>\n                        <Form.Item style={{ width: 80}} >\n                            <Select defaultValue={1} style={{ width: 80 }} >\n                                <Select.Option value={1}>电话</Select.Option>\n                                <Select.Option value={2}>邮箱</Select.Option>\n                                <Select.Option value={3}>QQ</Select.Option>\n                                <Select.Option value={4}>微信</Select.Option>\n                            </Select>\n                        </Form.Item> */}\n\n\n                        <Form.Item style={styles.searchItem}>\n                            <Input prefix={<Icon type=\"mobile\" style={styles.prefixIcon} />} placeholder=\"电话\" />\n                        </Form.Item>\n                        <Form.Item style={styles.searchItem}>\n                            <Input prefix={<Icon type=\"mail\" style={styles.prefixIcon} />} placeholder=\"邮箱\" />\n                        </Form.Item>\n\n                        {this.state.smallSize && <br/>}\n\n                        <Form.Item style={styles.searchItem}>\n                            <Input prefix={<Icon type=\"qq\" style={styles.prefixIcon} />} placeholder=\"QQ\" />\n                        </Form.Item>\n                        <Form.Item style={styles.searchItem}>\n                            <Input prefix={<Icon type=\"wechat\" style={styles.prefixIcon} />} placeholder=\"微信\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                icon=\"search\"\n                                htmlType=\"submit\">搜索</Button>\n                        </Form.Item>\n\n\n                        <Form.Item style={{ float: 'right' }}>\n                            <Button type=\"primary\" icon=\"plus\" onClick={() => this.showInfoDialog()}>添加</Button>\n                        </Form.Item>\n                    </Form>\n\n                </div>\n                <Table\n                    ref=\"table\"\n                    style={{ marginTop: 10 }}\n                    dataSource={this.state.mData}\n                    columns={this.columns}\n                    scroll={{ x: 800 }} />\n\n                <StaffInfoDialog\n                    visible={this.state.showInfoDialog}\n                    afterClose={() => this.setState({ showInfoDialog: false })} />\n\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    searchItem: {\n        width: 132,\n        marginRight: 6,\n    },\n    prefixIcon: {\n        color: 'rgba(0,0,0,.25)',\n    },\n}\n\n\n\nexport default StaffList;","import React from 'react';\nimport Const from './Const'\n\nimport {\n    Table, Icon, Button, message, Modal\n} from 'antd';\n\n\nclass JobList extends React.Component {\n    columns = [{\n        title: '序号',\n        dataIndex: 'index',\n        width: 80,\n        align: 'center'\n    }, {\n        title: '职位',\n        dataIndex: 'job',\n    }, {\n        title: '编辑',\n        dataIndex: 'id',\n        align: 'center',\n        width: 160,\n        render: (id) => (\n            <span>\n                <Icon type=\"close\" title=\"删除\" style={{ color: '#ee6633', }} onClick={() => this.showConfirm(id)} />\n            </span>\n        ),\n    }];\n\n    state = {\n        mJobs: [],\n    };\n\n    getData() {\n        let mData = [];\n        for (let i = 1; i < Const.jobs.length; i++) {\n            let job = {\n                index: i,\n                key: i,\n                id: i,\n                job: Const.jobs[i],\n            }\n            mData.push(job);\n        }\n\n        this.setState({\n            mJobs: mData,\n        });\n    }\n\n    removeData(id) {\n        let jobs = this.state.mJobs.filter((item) => item.id !== id);\n        this.setState({\n            mJobs: jobs\n        });\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <Button type=\"primary\" icon=\"plus\" style={{ float: 'right', marginBottom: 10 }} onClick={() => this.showInfoDialog()}>添加</Button>\n\n                <Table\n                    dataSource={this.state.mJobs}\n                    columns={this.columns}\n                    pagination={false} />\n            </div>\n        )\n    }\n\n    showConfirm(id) {\n        var that = this;    // 进入new Promise里面this就不能用了，这里在外面存一下。\n        const modal = Modal.confirm({\n            title: '确认',\n            content: '确定要删除该条' + id + '记录吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                return new Promise((resolve, reject) => {\n                    //this.removeData(id);\n                    let rdm = Math.random();\n                    console.log('test' + rdm);\n                    setTimeout(rdm > 0.5 ? resolve(rdm) : reject(rdm), 2000);\n                })\n                    .then((re) => {\n                        modal.destroy();\n                        message.info('删除成功!' + re);\n                        that.removeData(id);\n                    })\n                    .catch((re) => {\n                        message.error('操作失败，该职位已经有数据录入!' + re);\n                    });\n            },\n            onCancel() { },\n        });\n    }\n}\n\n\nexport default JobList;","import React, { Component } from 'react';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport logo from './logo.svg';\n\nimport {\n  Layout, Menu, Icon,\n} from 'antd';\n\nimport StaffList from './staffList';\nimport JobList from './jobList';\n\n\nconst {\n  Content, Footer, Sider,\n} = Layout;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n    currentPage: '1',\n  };\n\n  onCollapse = (collapsed) => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  }\n\n  render() {\n\n    let pageView;\n    if (this.state.currentPage === '2') {\n      pageView = <JobList/>;\n    } else {\n      pageView = <StaffList/>;\n    }\n\n    return (\n      <Layout style={{ minHeight: '100vh'}}>\n        <Sider\n        width={152}\n          collapsible\n          collapsed={this.state.collapsed}\n          onCollapse={this.onCollapse}\n        >\n          <div className=\"logo\" style={{height:80,backgroundColor:\"#333333\", textAlign: 'center'}}>\n            <img src={logo} alt='' style={{width:50, height:50, marginTop:15}}/>\n          </div>\n\n          <Menu theme=\"dark\" defaultSelectedKeys={[this.state.currentPage]} mode=\"inline\" onSelect={({key}) => this.setState({currentPage:key})}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"team\" />\n              <span>人员管理</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"cluster\" />\n              <span>职位管理</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n\n        <Layout>\n          {/* <Header style={{ margin: '0 16px', background: '#fff', padding: 0 }} /> */}\n          <Content style={{ margin: '12px 12px' }}>\n           \n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n              {pageView}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            Ant Design ©2018 Created by Ant UED\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}